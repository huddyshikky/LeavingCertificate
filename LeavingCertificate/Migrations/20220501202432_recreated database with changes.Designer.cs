// <auto-generated />
using System;
using LeavingCertificate.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeavingCertificate.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220501202432_recreated database with changes")]
    partial class recreateddatabasewithchanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24");

            modelBuilder.Entity("LeavingCertificate.Models.LeavingCertDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassOfLeaving")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Leaving_Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("LeavingCertDetails");
                });

            modelBuilder.Entity("LeavingCertificate.Models.SchoolDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("city")
                        .HasColumnType("TEXT");

                    b.Property<string>("postalcode")
                        .HasColumnType("TEXT");

                    b.Property<string>("schaddr")
                        .HasColumnType("TEXT");

                    b.Property<string>("schemail")
                        .HasColumnType("TEXT");

                    b.Property<string>("schmotto")
                        .HasColumnType("TEXT");

                    b.Property<string>("schname")
                        .HasColumnType("TEXT");

                    b.Property<string>("schtel")
                        .HasColumnType("TEXT");

                    b.Property<string>("schweb")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SchoolDetails");
                });

            modelBuilder.Entity("LeavingCertificate.Models.Stream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StreamName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Streams");
                });

            modelBuilder.Entity("LeavingCertificate.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdmNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassFirstEnrolled")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfAdmission")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeavingCertDetailsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StreamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StreamId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LeavingCertificate.Models.LeavingCertDetail", b =>
                {
                    b.HasOne("LeavingCertificate.Models.Student", "Student")
                        .WithOne("LeavingCert")
                        .HasForeignKey("LeavingCertificate.Models.LeavingCertDetail", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeavingCertificate.Models.Student", b =>
                {
                    b.HasOne("LeavingCertificate.Models.Stream", "Stream")
                        .WithMany("Students")
                        .HasForeignKey("StreamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
